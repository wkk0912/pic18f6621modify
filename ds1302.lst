

HI-TECH Software PICC-18 Macro Assembler V8.35PL3
Serial number: HCPIC18-88888                           Thu Jan  2 10:12:16 2014

Licensed to: ONE TWO
     1                           	processor	18F6622
     2                           	opt	pw 80
     3                           	psect	__Z88888RS_,global,delta=1
     4                           	psect	text,global,reloc=2,class=CODE,delta=1
     5                           	psect	const,global,class=CODE,delta=1
     6                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     7                           	psect	bss,global,class=RAM,space=1,delta=1
     8                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99                           
   100                           	psect	__Z88888RS_
   101  000004                     
   102                           ;stdlib.h: 122: extern int atexit(void (*)(void)
      +                          );
   103                           ;stdlib.h: 126: extern void qsort(void *, size_t
      +                          , size_t, int (*)(const void *, const void *));
   104                           ;stdlib.h: 127: extern void * bsearch(const void
      +                           *, void *, size_t, size_t, int(*)(const void *,
      +                           const void *));
   105                           ;       param _us assigned to ?_delay_us+0
   106  000000                     _delay_us$us	set	?_delay_us
   107  000004                     
   108                           
   109                           	psect	text
   110  009AAE  002C               	dw	?_delay_us
   111                           ;ds1302.c: 213: void bcd_to_asc(unsigned char BC
      +                          D,unsigned char ptasc[])
   112                           ;ds1302.c: 214: {
   113                           ;       param _ptasc assigned to ?_bcd_to_asc+0
   114  000000                     _bcd_to_asc$ptasc	set	?_bcd_to_asc
   115                           ;ds1302.c: 141: void set_rtc_time(unsigned char 
      +                          data,unsigned char addr)
   116                           ;ds1302.c: 142: {
   117                           ;       param _addr assigned to ?_set_rtc_time+0
   118  000000                     _set_rtc_time$addr	set	?_set_rtc_time
   119                           ;ds1302.c: 126: void ds1302_set_time(unsigned ch
      +                          ar ptTimeD[])
   120                           ;ds1302.c: 127: {
   121                           ;       param _ptTimeD assigned to ?_ds1302_set_
      +                          time+0
   122  000000                     _ds1302_set_time$ptTimeD	set	?_ds1302_set_time
   123                           ;ds1302.c: 87: void ds1302_write_data(unsigned c
      +                          har addr,unsigned char data)
   124                           ;ds1302.c: 88: {
   125                           ;       param _data assigned to ?_ds1302_write_d
      +                          ata+0
   126  000000                     _ds1302_write_data$data	set	?_ds1302_write_data
   127  009AB0                     _delay_us:
   128  000000                     
   129                           ;ds1302.c: 13: while(us--);
   130  009AB0                     l8:
   131  009AB0  0100               	movlb	__Lparam shr (0+8)
   132  009AB2  512C               	movf	?_delay_us^(__Lparam& (0+65280)),w
   133  009AB4  6E00               	movwf	btemp
   134  009AB6  512D               	movf	(?_delay_us+1)^(__Lparam& (0+65280)),w
   135  009AB8  6E01               	movwf	btemp+1
   136  009ABA  072C               	decf	?_delay_us^(__Lparam& (0+65280)),f
   137  009ABC  0E00               	movlw	0
   138  009ABE  5B2D               	subwfb	(?_delay_us+1)^(__Lparam& (0+65280)),f
   139  009AC0  5001               	movf	btemp+1,w
   140  009AC2  1000               	iorwf	btemp,w
   141  009AC4  B4D8               	btfsc	status,2,c
   142  009AC6  0012               	return	
   143  009AC8  D7F3               	goto	l8
   144                           ;ds1302.c: 14: }
   145                           ;ds1302.c: 19: void delay_ms(unsigned int MS)
   146                           ;ds1302.c: 20: {
   147                           ;       param _MS assigned to ?_delay_ms+0
   148  009ACA  002B               	dw	?_delay_ms
   149  009ACC                     _delay_ms:
   150  000000                     
   151                           ;ds1302.c: 21: unsigned int i,j;
   152  009ACC  6AF6               	clrf	tblptrl,c
   153  009ACE  6AF7               	clrf	tblptrh,c
   154  009AD0                     l15:
   155  009AD0  0100               	movlb	__Lparam shr (0+8)
   156  009AD2  512C               	movf	(?_delay_ms+1)^(__Lparam& (0+65280)),w
   157  009AD4  5CF7               	subwf	tblptrh,w,c
   158  009AD6  E102               	bnz	u35
   159  009AD8  512B               	movf	?_delay_ms^(__Lparam& (0+65280)),w
   160  009ADA  5CF6               	subwf	tblptrl,w,c
   161  009ADC                     u35:
   162  009ADC  B0D8               	btfsc	status,0,c
   163  009ADE  0012               	return	
   164                           ;ds1302.c: 23: for(j=0;j<1180;j++);
   165  009AE0  6AF3               	clrf	prodl,c
   166  009AE2  6AF4               	clrf	prodh,c
   167  009AE4                     l16:
   168  009AE4  4AF3               	infsnz	prodl,f,c
   169  009AE6  2AF4               	incf	prodh,f,c
   170  009AE8  0E04               	movlw	4
   171  009AEA  5CF4               	subwf	prodh,w,c
   172  009AEC  0E9C               	movlw	156
   173  009AEE  B4D8               	btfsc	status,2,c
   174  009AF0  5CF3               	subwf	prodl,w,c
   175  009AF2  A0D8               	btfss	status,0,c
   176  009AF4  D7F7               	goto	l16
   177  009AF6  4AF6               	infsnz	tblptrl,f,c
   178  009AF8  2AF7               	incf	tblptrh,f,c
   179  009AFA  D7EA               	goto	l15
   180                           ;ds1302.c: 24: }
   181                           ;ds1302.c: 29: void ds1302_pin_init(void)
   182                           ;ds1302.c: 30: {
   183  009AFC                     _ds1302_pin_init:
   184  000000                     
   185                           ;ds1302.c: 31: TRISC3=0;
   186  009AFC  9694               	bcf	3988,3,c	;volatile
   187                           ;ds1302.c: 32: TRISC4=0;
   188  009AFE  9894               	bcf	3988,4,c	;volatile
   189                           ;ds1302.c: 33: TRISC5=0;
   190  009B00  9A94               	bcf	3988,5,c	;volatile
   191                           ;ds1302.c: 35: }
   192  009B02  0012               	return	
   193                           ;ds1302.c: 41: void ds1302_write_byte(unsigned c
      +                          har byte)
   194                           ;ds1302.c: 42: {
   195  009B04                     _ds1302_write_byte:
   196  000000                     
   197                           ; _byte loaded to fsr1l
   198  009B04  6EE1               	movwf	fsr1l,c
   199                           ;ds1302.c: 43: unsigned char i;
   200  009B06  6AD9               	clrf	fsr2l,c
   201  009B08                     l21:
   202                           ;ds1302.c: 46: {
   203                           ;ds1302.c: 47: RC5 = 0;
   204  009B08  9A82               	bcf	3970,5,c	;volatile
   205                           ;ds1302.c: 48: if(byte&0x01)
   206  009B0A  A0E1               	btfss	fsr1l,0,c
   207  009B0C  D002               	goto	l24
   208                           ;ds1302.c: 49: {
   209  009B0E  8882               	bsf	3970,4,c	;volatile
   210                           ;ds1302.c: 51: }
   211  009B10  D001               	goto	l25
   212  009B12                     l24:
   213                           ;ds1302.c: 53: {
   214  009B12  9882               	bcf	3970,4,c	;volatile
   215  009B14                     l25:
   216                           ;ds1302.c: 55: }
   217                           ;ds1302.c: 56: delay_us(10);
   218  009B14  0E0A               	movlw	10
   219  009B16  0100               	movlb	__Lparam shr (0+8)
   220  009B18  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   221  009B1A  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   222  009B1C  DFC9               	call	_delay_us	;wreg free
   223                           ;ds1302.c: 57: RC5 = 1;
   224  009B1E  8A82               	bsf	3970,5,c	;volatile
   225                           ;ds1302.c: 58: byte>>=1;
   226  009B20  90D8               	bcf	status,0,c
   227  009B22  32E1               	rrcf	fsr1l,f,c
   228                           ;ds1302.c: 59: }
   229  009B24  2AD9               	incf	fsr2l,f,c
   230  009B26  0E07               	movlw	7
   231  009B28  64D9               	cpfsgt	fsr2l,c
   232  009B2A  D7EE               	goto	l21
   233  009B2C  0012               	return	
   234                           ;ds1302.c: 60: }
   235                           ;ds1302.c: 64: unsigned char ds1302_read_byte(vo
      +                          id)
   236                           ;ds1302.c: 65: {
   237  009B2E                     _ds1302_read_byte:
   238  000000                     
   239                           ;ds1302.c: 66: unsigned char i,byte=0;
   240  009B2E  6AD9               	clrf	fsr2l,c
   241                           ;ds1302.c: 67: TRISC4 = 1;
   242  009B30  8894               	bsf	3988,4,c	;volatile
   243                           ;ds1302.c: 68: RC4 = 0;
   244  009B32  9882               	bcf	3970,4,c	;volatile
   245                           ;ds1302.c: 69: for(i=0;i<8;i++)
   246  009B34  6AE1               	clrf	fsr1l,c
   247  009B36                     l27:
   248                           ;ds1302.c: 70: {
   249                           ;ds1302.c: 71: byte>>=1;
   250  009B36  90D8               	bcf	status,0,c
   251  009B38  32D9               	rrcf	fsr2l,f,c
   252                           ;ds1302.c: 72: RC5 = 1;
   253  009B3A  8A82               	bsf	3970,5,c	;volatile
   254                           ;ds1302.c: 73: delay_us(10);
   255  009B3C  0E0A               	movlw	10
   256  009B3E  0100               	movlb	__Lparam shr (0+8)
   257  009B40  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   258  009B42  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   259  009B44  DFB5               	call	_delay_us	;wreg free
   260                           ;ds1302.c: 74: RC5 = 0;
   261  009B46  9A82               	bcf	3970,5,c	;volatile
   262                           ;ds1302.c: 75: delay_us(10);
   263  009B48  0E0A               	movlw	10
   264  009B4A  0100               	movlb	__Lparam shr (0+8)
   265  009B4C  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   266  009B4E  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   267  009B50  DFAF               	call	_delay_us	;wreg free
   268                           ;ds1302.c: 76: if(RC4)
   269  009B52  B882               	btfsc	3970,4,c	;volatile
   270                           ;ds1302.c: 77: {
   271  009B54  8ED9               	bsf	fsr2l,7,c
   272                           ;ds1302.c: 79: }
   273  009B56  2AE1               	incf	fsr1l,f,c
   274  009B58  0E07               	movlw	7
   275  009B5A  64E1               	cpfsgt	fsr1l,c
   276  009B5C  D7EC               	goto	l27
   277                           ;ds1302.c: 81: TRISC4 = 0;
   278  009B5E  9894               	bcf	3988,4,c	;volatile
   279                           ;ds1302.c: 82: return byte;
   280  009B60  50D9               	movf	fsr2l,w,c
   281  009B62  0012               	return	
   282                           ;ds1302.c: 83: }
   283  009B64  002B               	dw	?_ds1302_write_data
   284  009B66                     _ds1302_write_data:
   285  000000                     
   286                           ; _addr loaded to fsr0l
   287  009B66  6EE9               	movwf	fsr0l,c
   288                           ;ds1302.c: 89: RC3 = 0;
   289  009B68  9682               	bcf	3970,3,c	;volatile
   290                           ;ds1302.c: 90: RC5 = 0;
   291  009B6A  9A82               	bcf	3970,5,c	;volatile
   292                           ;ds1302.c: 91: delay_us(10);
   293  009B6C  0E0A               	movlw	10
   294  009B6E  0100               	movlb	__Lparam shr (0+8)
   295  009B70  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   296  009B72  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   297  009B74  DF9D               	call	_delay_us	;wreg free
   298                           ;ds1302.c: 92: RC3 = 1;
   299  009B76  8682               	bsf	3970,3,c	;volatile
   300                           ;ds1302.c: 93: delay_us(10);
   301  009B78  0E0A               	movlw	10
   302  009B7A  0100               	movlb	__Lparam shr (0+8)
   303  009B7C  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   304  009B7E  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   305  009B80  DF97               	call	_delay_us	;wreg free
   306                           ;ds1302.c: 94: ds1302_write_byte(addr);
   307  009B82  50E9               	movf	fsr0l,w,c
   308  009B84  DFBF               	call	_ds1302_write_byte
   309                           ;ds1302.c: 95: delay_us(10);
   310  009B86  0E0A               	movlw	10
   311  009B88  0100               	movlb	__Lparam shr (0+8)
   312  009B8A  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   313  009B8C  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   314  009B8E  DF90               	call	_delay_us	;wreg free
   315                           ;ds1302.c: 96: RC5 = 0;
   316  009B90  9A82               	bcf	3970,5,c	;volatile
   317                           ;ds1302.c: 97: delay_us(10);
   318  009B92  0E0A               	movlw	10
   319  009B94  0100               	movlb	__Lparam shr (0+8)
   320  009B96  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   321  009B98  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   322  009B9A  DF8A               	call	_delay_us	;wreg free
   323                           ;ds1302.c: 98: ds1302_write_byte(data);
   324  009B9C  0100               	movlb	__Lparam shr (0+8)
   325  009B9E  512B               	movf	?_ds1302_write_data^(__Lparam& (0+65280)),
      +                          w
   326  009BA0  DFB1               	call	_ds1302_write_byte
   327                           ;ds1302.c: 99: RC5 = 0;
   328  009BA2  9A82               	bcf	3970,5,c	;volatile
   329                           ;ds1302.c: 100: delay_us(10);
   330  009BA4  0E0A               	movlw	10
   331  009BA6  0100               	movlb	__Lparam shr (0+8)
   332  009BA8  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   333  009BAA  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   334  009BAC  DF81               	call	_delay_us	;wreg free
   335                           ;ds1302.c: 101: RC3 = 0;
   336  009BAE  9682               	bcf	3970,3,c	;volatile
   337                           ;ds1302.c: 102: }
   338  009BB0  0012               	return	
   339                           ;ds1302.c: 106: unsigned char ds1302_read_data(u
      +                          nsigned char addr)
   340                           ;ds1302.c: 107: {
   341  009BB2                     _ds1302_read_data:
   342  000000                     
   343                           ; _addr loaded to fsr0l
   344  009BB2  6EE9               	movwf	fsr0l,c
   345                           ;ds1302.c: 108: unsigned char data;
   346  009BB4  9682               	bcf	3970,3,c	;volatile
   347                           ;ds1302.c: 111: RC5 = 0;
   348  009BB6  9A82               	bcf	3970,5,c	;volatile
   349                           ;ds1302.c: 112: delay_us(10);
   350  009BB8  0E0A               	movlw	10
   351  009BBA  0100               	movlb	__Lparam shr (0+8)
   352  009BBC  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   353  009BBE  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   354  009BC0  DF77               	call	_delay_us	;wreg free
   355                           ;ds1302.c: 113: RC3 = 1;
   356  009BC2  8682               	bsf	3970,3,c	;volatile
   357                           ;ds1302.c: 114: delay_us(10);
   358  009BC4  0E0A               	movlw	10
   359  009BC6  0100               	movlb	__Lparam shr (0+8)
   360  009BC8  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   361  009BCA  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   362  009BCC  DF71               	call	_delay_us	;wreg free
   363                           ;ds1302.c: 115: ds1302_write_byte(addr);
   364  009BCE  50E9               	movf	fsr0l,w,c
   365  009BD0  DF99               	call	_ds1302_write_byte
   366                           ;ds1302.c: 116: delay_us(10);
   367  009BD2  0E0A               	movlw	10
   368  009BD4  0100               	movlb	__Lparam shr (0+8)
   369  009BD6  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   370  009BD8  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   371  009BDA  DF6A               	call	_delay_us	;wreg free
   372                           ;ds1302.c: 117: data = ds1302_read_byte();
   373  009BDC  DFA8               	call	_ds1302_read_byte	;wreg free
   374  009BDE  6EE9               	movwf	fsr0l,c
   375                           ;ds1302.c: 118: delay_us(10);
   376  009BE0  0E0A               	movlw	10
   377  009BE2  0100               	movlb	__Lparam shr (0+8)
   378  009BE4  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   379  009BE6  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   380  009BE8  DF63               	call	_delay_us	;wreg free
   381                           ;ds1302.c: 119: RC5 = 0;
   382  009BEA  9A82               	bcf	3970,5,c	;volatile
   383                           ;ds1302.c: 120: RC3 = 0;
   384  009BEC  9682               	bcf	3970,3,c	;volatile
   385                           ;ds1302.c: 121: return data;
   386  009BEE  50E9               	movf	fsr0l,w,c
   387  009BF0  0012               	return	
   388                           ;ds1302.c: 122: }
   389  009BF2  0029               	dw	?_ds1302_set_time
   390  009BF4                     _ds1302_set_time:
   391  000000                     
   392                           ;ds1302.c: 128: unsigned char i;
   393  009BF4  0E80               	movlw	128
   394  009BF6  6E02               	movwf	btemp+2
   395                           ;ds1302.c: 130: ds1302_write_data(0x8E|0x00,0x00
      +                          );
   396  009BF8  0100               	movlb	__Lparam shr (0+8)
   397  009BFA  6B2B               	clrf	?_ds1302_write_data^(__Lparam& (0+65280))
   398  009BFC  0E8E               	movlw	142
   399  009BFE  DFB3               	call	_ds1302_write_data
   400                           ;ds1302.c: 131: delay_ms(5);
   401  009C00  0E05               	movlw	5
   402  009C02  0100               	movlb	__Lparam shr (0+8)
   403  009C04  6F2B               	movwf	?_delay_ms^(__Lparam& (0+65280))
   404  009C06  6B2C               	clrf	(?_delay_ms+1)^(__Lparam& (0+65280))
   405  009C08  DF61               	call	_delay_ms	;wreg free
   406                           ;ds1302.c: 132: for(i=0;i<7;i++)
   407  009C0A  6A03               	clrf	btemp+3
   408  009C0C                     l34:
   409                           ;ds1302.c: 133: {
   410                           ;ds1302.c: 134: ds1302_write_data(addr|0x00,ptTi
      +                          meD[i]);
   411  009C0C  5003               	movf	btemp+3,w
   412  009C0E  0100               	movlb	__Lparam shr (0+8)
   413  009C10  2529               	addwf	?_ds1302_set_time^(__Lparam& (0+65280)),w
   414  009C12  6EE9               	movwf	fsr0l,c
   415  009C14  0E00               	movlw	0
   416  009C16  212A               	addwfc	(?_ds1302_set_time+1)^(__Lparam& (0+6528
      +                          0)),w
   417  009C18  6EEA               	movwf	fsr0h
   418  009C1A  50EF               	movf	indf0,w,c
   419  009C1C  6F2B               	movwf	?_ds1302_write_data^(__Lparam& (0+65280))
   420  009C1E  5002               	movf	btemp+2,w
   421  009C20  DFA2               	call	_ds1302_write_data
   422                           ;ds1302.c: 135: addr+=2;
   423  009C22  0E02               	movlw	2
   424  009C24  2602               	addwf	btemp+2,f
   425                           ;ds1302.c: 136: delay_ms(1);
   426  009C26  0E01               	movlw	1
   427  009C28  0100               	movlb	__Lparam shr (0+8)
   428  009C2A  6F2B               	movwf	?_delay_ms^(__Lparam& (0+65280))
   429  009C2C  6B2C               	clrf	(?_delay_ms+1)^(__Lparam& (0+65280))
   430  009C2E  DF4E               	call	_delay_ms	;wreg free
   431                           ;ds1302.c: 137: }
   432  009C30  2A03               	incf	btemp+3,f
   433  009C32  0E06               	movlw	6
   434  009C34  6403               	cpfsgt	btemp+3
   435  009C36  D7EA               	goto	l34
   436  009C38  D052               	goto	L2
   437                           ;ds1302.c: 138: ds1302_write_data(0x8E|0x00,0x80
      +                          );
   438                           ;ds1302.c: 139: }
   439  009C3A  002A               	dw	?_set_rtc_time
   440  009C3C                     _set_rtc_time:
   441  000000                     
   442                           ; _data loaded to btemp+2
   443  009C3C  6E02               	movwf	btemp+2
   444                           ;ds1302.c: 143: ds1302_write_data(0x8E|0x00,0x00
      +                          );
   445  009C3E  0100               	movlb	__Lparam shr (0+8)
   446  009C40  6B2B               	clrf	?_ds1302_write_data^(__Lparam& (0+65280))
   447  009C42  0E8E               	movlw	142
   448  009C44  DF90               	call	_ds1302_write_data
   449                           ;ds1302.c: 144: delay_ms(5);
   450  009C46  0E05               	movlw	5
   451  009C48  0100               	movlb	__Lparam shr (0+8)
   452  009C4A  6F2B               	movwf	?_delay_ms^(__Lparam& (0+65280))
   453  009C4C  6B2C               	clrf	(?_delay_ms+1)^(__Lparam& (0+65280))
   454  009C4E  DF3E               	call	_delay_ms	;wreg free
   455                           ;ds1302.c: 145: ds1302_write_data(addr|0x00,data
      +                          );
   456  009C50  5002               	movf	btemp+2,w
   457  009C52  0100               	movlb	__Lparam shr (0+8)
   458  009C54  6F2B               	movwf	?_ds1302_write_data^(__Lparam& (0+65280))
   459  009C56  512A               	movf	?_set_rtc_time^(__Lparam& (0+65280)),w
   460  009C58  DF86               	call	_ds1302_write_data
   461                           ;ds1302.c: 146: delay_ms(1);
   462  009C5A  0E01               	movlw	1
   463  009C5C  0100               	movlb	__Lparam shr (0+8)
   464  009C5E  6F2B               	movwf	?_delay_ms^(__Lparam& (0+65280))
   465  009C60  6B2C               	clrf	(?_delay_ms+1)^(__Lparam& (0+65280))
   466  009C62  DF34               	call	_delay_ms	;wreg free
   467  009C64  D03C               	goto	L2
   468                           ;ds1302.c: 147: ds1302_write_data(0x8E|0x00,0x80
      +                          );
   469                           ;ds1302.c: 150: }
   470                           ;ds1302.c: 154: void ds1302_get_time(void)
   471                           ;ds1302.c: 155: {
   472  009C66                     _ds1302_get_time:
   473  000000                     
   474                           ;ds1302.c: 156: unsigned char i;
   475  009C66  9682               	bcf	3970,3,c	;volatile
   476                           ;ds1302.c: 160: delay_us(10);
   477  009C68  0E0A               	movlw	10
   478  009C6A  0100               	movlb	__Lparam shr (0+8)
   479  009C6C  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   480  009C6E  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   481  009C70  DF1F               	call	_delay_us	;wreg free
   482                           ;ds1302.c: 161: RC3 = 1;
   483  009C72  8682               	bsf	3970,3,c	;volatile
   484                           ;ds1302.c: 162: delay_us(10);
   485  009C74  0E0A               	movlw	10
   486  009C76  0100               	movlb	__Lparam shr (0+8)
   487  009C78  6F2C               	movwf	?_delay_us^(__Lparam& (0+65280))
   488  009C7A  6B2D               	clrf	(?_delay_us+1)^(__Lparam& (0+65280))
   489  009C7C  DF19               	call	_delay_us	;wreg free
   490                           ;ds1302.c: 163: ds1302_write_byte(0xbf);
   491  009C7E  0EBF               	movlw	191
   492  009C80  DF41               	call	_ds1302_write_byte
   493                           ;ds1302.c: 164: for (i=0;i<8;i++)
   494  009C82  6AF3               	clrf	prodl,c
   495  009C84                     l39:
   496                           ;ds1302.c: 165: {
   497                           ;ds1302.c: 166: time[i]=ds1302_read_byte();
   498  009C84  50F3               	movf	prodl,w,c
   499  009C86  EE0E  F08A         	lfsr	0,_time
   500  009C8A  26E9               	addwf	fsr0l,f,c
   501  009C8C  0E00               	movlw	0
   502  009C8E  22EA               	addwfc	fsr0h,f,c
   503  009C90  DF4E               	call	_ds1302_read_byte	;wreg free
   504  009C92  6EEF               	movwf	indf0,c
   505                           ;ds1302.c: 167: }
   506  009C94  2AF3               	incf	prodl,f,c
   507  009C96  0E07               	movlw	7
   508  009C98  64F3               	cpfsgt	prodl,c
   509  009C9A  D7F4               	goto	l39
   510                           ;ds1302.c: 168: RC3 = 0;
   511  009C9C  9682               	bcf	3970,3,c	;volatile
   512                           ;ds1302.c: 169: RC5 = 0;
   513  009C9E  9A82               	bcf	3970,5,c	;volatile
   514                           ;ds1302.c: 171: bcd_to_hex();
   515  009CA0  D023               	goto	_bcd_to_hex	;wreg free
   516                           ;ds1302.c: 172: }
   517                           ;ds1302.c: 177: unsigned char ds1302_check(void)
   518                           ;ds1302.c: 178: {
   519  009CA2                     _ds1302_check:
   520  000000                     
   521                           ;ds1302.c: 179: unsigned char exist;
   522  009CA2  0100               	movlb	__Lparam shr (0+8)
   523  009CA4  6B2B               	clrf	?_ds1302_write_data^(__Lparam& (0+65280))
   524  009CA6  0E8E               	movlw	142
   525  009CA8  DF5E               	call	_ds1302_write_data
   526                           ;ds1302.c: 181: ds1302_write_data(0xC0|0x00,0xA5
      +                          );
   527  009CAA  0EA5               	movlw	165
   528  009CAC  0100               	movlb	__Lparam shr (0+8)
   529  009CAE  6F2B               	movwf	?_ds1302_write_data^(__Lparam& (0+65280))
   530  009CB0  0EC0               	movlw	192
   531  009CB2  DF59               	call	_ds1302_write_data
   532                           ;ds1302.c: 182: exist=ds1302_read_data(0xC0|0x01
      +                          );
   533                           ; _exist allocated to prodl
   534  009CB4  0EC1               	movlw	193
   535  009CB6  DF7D               	call	_ds1302_read_data
   536  009CB8  6EF3               	movwf	prodl,c
   537                           ;ds1302.c: 183: if(exist==0xA5)
   538  009CBA  50F3               	movf	prodl,w,c
   539  009CBC  0AA5               	xorlw	-91
   540  009CBE  A4D8               	btfss	status,2,c
   541  009CC0  D003               	goto	l43
   542                           ;ds1302.c: 184: {
   543                           ; _exist allocated to fsr2l
   544  009CC2  0E01               	movlw	1
   545  009CC4  6ED9               	movwf	fsr2l,c
   546                           ;ds1302.c: 186: }
   547  009CC6  D001               	goto	l44
   548  009CC8                     l43:
   549                           ;ds1302.c: 188: {
   550  009CC8  6AD9               	clrf	fsr2l,c
   551  009CCA                     l44:
   552                           ;ds1302.c: 190: }
   553                           ;ds1302.c: 191: return exist;
   554  009CCA  50D9               	movf	fsr2l,w,c
   555  009CCC  0012               	return	
   556                           ;ds1302.c: 192: }
   557                           ;ds1302.c: 195: void ds1302_init(void)
   558                           ;ds1302.c: 196: {
   559  009CCE                     _ds1302_init:
   560  000000                     
   561                           ;ds1302.c: 197: ds1302_write_data(0x8E|0x00,0x00
      +                          );
   562  009CCE  0100               	movlb	__Lparam shr (0+8)
   563  009CD0  6B2B               	clrf	?_ds1302_write_data^(__Lparam& (0+65280))
   564  009CD2  0E8E               	movlw	142
   565  009CD4  DF48               	call	_ds1302_write_data
   566                           ;ds1302.c: 198: ds1302_write_data(0x80|0x00,0x00
      +                          );
   567  009CD6  0100               	movlb	__Lparam shr (0+8)
   568  009CD8  6B2B               	clrf	?_ds1302_write_data^(__Lparam& (0+65280))
   569  009CDA  0E80               	movlw	128
   570  009CDC  DF44               	call	_ds1302_write_data
   571  009CDE                     L2:
   572                           ;ds1302.c: 199: ds1302_write_data(0x8E|0x00,0x80
      +                          );
   573  009CDE  0E80               	movlw	128
   574  009CE0  0100               	movlb	__Lparam shr (0+8)
   575  009CE2  6F2B               	movwf	?_ds1302_write_data^(__Lparam& (0+65280))
   576  009CE4  0E8E               	movlw	142
   577  009CE6  D73F               	goto	_ds1302_write_data
   578                           ;ds1302.c: 200: }
   579                           ;ds1302.c: 202: void bcd_to_hex(void)
   580                           ;ds1302.c: 203: {
   581  009CE8                     _bcd_to_hex:
   582  000000                     
   583                           ;ds1302.c: 205: rtc.second = (time[0]>>4)*10+(ti
      +                          me[0]&0x0f);
   584  009CE8  CE8A  F000         	movff	_time,btemp
   585  009CEC  3800               	swapf	btemp,w
   586  009CEE  0B0F               	andlw	15
   587  009CF0  0D0A               	mullw	10
   588  009CF2  CE8A  F000         	movff	_time,btemp
   589  009CF6  0E0F               	movlw	15
   590  009CF8  1600               	andwf	btemp,f
   591  009CFA  50F3               	movf	prodl,w,c
   592  009CFC  2400               	addwf	btemp,w
   593  009CFE  CFE8 F197          	movff	wreg,_rtc
   594  009D02  0E00               	movlw	0
   595  009D04  20F4               	addwfc	prodh,w,c
   596  009D06  CFE8 F198          	movff	wreg,_rtc+1
   597                           ;ds1302.c: 206: rtc.minute = (time[1]>>4)*10+(ti
      +                          me[1]&0x0f);
   598  009D0A  CE8B  F000         	movff	_time+1,btemp
   599  009D0E  3800               	swapf	btemp,w
   600  009D10  0B0F               	andlw	15
   601  009D12  0D0A               	mullw	10
   602  009D14  CE8B  F000         	movff	_time+1,btemp
   603  009D18  0E0F               	movlw	15
   604  009D1A  1600               	andwf	btemp,f
   605  009D1C  50F3               	movf	prodl,w,c
   606  009D1E  2400               	addwf	btemp,w
   607  009D20  CFE8 F199          	movff	wreg,_rtc+2
   608  009D24  0E00               	movlw	0
   609  009D26  20F4               	addwfc	prodh,w,c
   610  009D28  CFE8 F19A          	movff	wreg,_rtc+3
   611                           ;ds1302.c: 207: rtc.hour = (time[2]>>4)*10+(time
      +                          [2]&0x0f);
   612  009D2C  CE8C  F000         	movff	_time+2,btemp
   613  009D30  3800               	swapf	btemp,w
   614  009D32  0B0F               	andlw	15
   615  009D34  0D0A               	mullw	10
   616  009D36  CE8C  F000         	movff	_time+2,btemp
   617  009D3A  0E0F               	movlw	15
   618  009D3C  1600               	andwf	btemp,f
   619  009D3E  50F3               	movf	prodl,w,c
   620  009D40  2400               	addwf	btemp,w
   621  009D42  CFE8 F19B          	movff	wreg,_rtc+4
   622  009D46  0E00               	movlw	0
   623  009D48  20F4               	addwfc	prodh,w,c
   624  009D4A  CFE8 F19C          	movff	wreg,_rtc+5
   625                           ;ds1302.c: 208: rtc.date = (time[3]>>4)*10+(time
      +                          [3]&0x0f);
   626  009D4E  CE8D  F000         	movff	_time+3,btemp
   627  009D52  3800               	swapf	btemp,w
   628  009D54  0B0F               	andlw	15
   629  009D56  0D0A               	mullw	10
   630  009D58  CE8D  F000         	movff	_time+3,btemp
   631  009D5C  0E0F               	movlw	15
   632  009D5E  1600               	andwf	btemp,f
   633  009D60  50F3               	movf	prodl,w,c
   634  009D62  2400               	addwf	btemp,w
   635  009D64  CFE8 F19D          	movff	wreg,_rtc+6
   636  009D68  0E00               	movlw	0
   637  009D6A  20F4               	addwfc	prodh,w,c
   638  009D6C  CFE8 F19E          	movff	wreg,_rtc+7
   639                           ;ds1302.c: 209: rtc.month = (time[4]>>4)*10+(tim
      +                          e[4]&0x0f);
   640  009D70  CE8E  F000         	movff	_time+4,btemp
   641  009D74  3800               	swapf	btemp,w
   642  009D76  0B0F               	andlw	15
   643  009D78  0D0A               	mullw	10
   644  009D7A  CE8E  F000         	movff	_time+4,btemp
   645  009D7E  0E0F               	movlw	15
   646  009D80  1600               	andwf	btemp,f
   647  009D82  50F3               	movf	prodl,w,c
   648  009D84  2400               	addwf	btemp,w
   649  009D86  CFE8 F19F          	movff	wreg,_rtc+8
   650  009D8A  0E00               	movlw	0
   651  009D8C  20F4               	addwfc	prodh,w,c
   652  009D8E  CFE8 F1A0          	movff	wreg,_rtc+9
   653                           ;ds1302.c: 210: rtc.year = (time[6]>>4)*10+(time
      +                          [6]&0x0f);
   654  009D92  CE90  F000         	movff	_time+6,btemp
   655  009D96  3800               	swapf	btemp,w
   656  009D98  0B0F               	andlw	15
   657  009D9A  0D0A               	mullw	10
   658  009D9C  CE90  F000         	movff	_time+6,btemp
   659  009DA0  0E0F               	movlw	15
   660  009DA2  1600               	andwf	btemp,f
   661  009DA4  50F3               	movf	prodl,w,c
   662  009DA6  2400               	addwf	btemp,w
   663  009DA8  CFE8 F1A1          	movff	wreg,_rtc+10
   664  009DAC  0E00               	movlw	0
   665  009DAE  20F4               	addwfc	prodh,w,c
   666  009DB0  CFE8 F1A2          	movff	wreg,_rtc+11
   667                           ;ds1302.c: 211: }
   668  009DB4  0012               	return	
   669  009DB6  0029               	dw	?_bcd_to_asc
   670  009DB8                     _bcd_to_asc:
   671  000000                     
   672                           ; _BCD loaded to fsr2l
   673  009DB8  6ED9               	movwf	fsr2l,c
   674                           ;ds1302.c: 215: ptasc[0]=(BCD>>4) |0x30;
   675                           ; _ptasc loaded to fsr1
   676  009DBA  C029  FFE1         	movff	?_bcd_to_asc,fsr1l
   677  009DBE  C02A  FFE2         	movff	?_bcd_to_asc+1,fsr1h
   678  009DC2  38D9               	swapf	fsr2l,w,c
   679  009DC4  0B0F               	andlw	15
   680  009DC6  0930               	iorlw	48
   681  009DC8  6EE7               	movwf	indf1,c
   682                           ;ds1302.c: 216: ptasc[1]=(BCD&0x0F)|0x30;
   683  009DCA  EE00 F001          	lfsr	0,1
   684  009DCE  50E1               	movf	fsr1l,w,c
   685  009DD0  26E9               	addwf	fsr0l,f,c
   686  009DD2  50E2               	movf	fsr1h,w,c
   687  009DD4  22EA               	addwfc	fsr0h,f,c
   688  009DD6  50D9               	movf	fsr2l,w,c
   689  009DD8  0B0F               	andlw	15
   690  009DDA  0930               	iorlw	48
   691  009DDC  6EEF               	movwf	indf0,c
   692                           ;ds1302.c: 217: }
   693  009DDE  0012               	return	
   694                           ;ds1302.c: 220: void rtc_test(void)
   695                           ;ds1302.c: 221: {
   696  009DE0                     _rtc_test:
   697  000000                     
   698                           ;ds1302.c: 224: ds1302_get_time();
   699  009DE0  DF42               	call	_ds1302_get_time	;wreg free
   700                           ;ds1302.c: 225: bcd_to_hex();
   701  009DE2  DF82               	call	_bcd_to_hex	;wreg free
   702                           ;ds1302.c: 227: memset(bufb,'\0',sizeof(bufb));
   703  009DE4  0100               	movlb	__Lparam shr (0+8)
   704  009DE6  0E94               	movlw	low _bufb
   705  009DE8  6F35               	movwf	?_memset^(__Lparam& (0+65280))
   706  009DEA  0E0E               	movlw	high _bufb
   707  009DEC  6F36               	movwf	(?_memset+1)^(__Lparam& (0+65280))
   708  009DEE  6B37               	clrf	(?_memset+2)^(__Lparam& (0+65280))
   709  009DF0  6B38               	clrf	(?_memset+3)^(__Lparam& (0+65280))
   710  009DF2  0E64               	movlw	100
   711  009DF4  6F39               	movwf	(?_memset+4)^(__Lparam& (0+65280))
   712  009DF6  6B3A               	clrf	(?_memset+5)^(__Lparam& (0+65280))
   713  009DF8  EC9A  F051         	call	_memset	;wreg free
   714                           ;ds1302.c: 228: sprintf( bufb,"20%02d-%02d-%02d"
      +                          ,rtc.year,rtc.month,rtc.date);
   715  009DFC  0100               	movlb	__Lparam shr (0+8)
   716  009DFE  0E94               	movlw	low _bufb
   717  009E00  6F37               	movwf	(?_sprintf+2)^(__Lparam& (0+65280))
   718  009E02  0E0E               	movlw	high _bufb
   719  009E04  6F38               	movwf	(?_sprintf+3)^(__Lparam& (0+65280))
   720  009E06  0E11               	movlw	low u19
   721  009E08  6F39               	movwf	(?_sprintf+4)^(__Lparam& (0+65280))
   722  009E0A  0E0F               	movlw	high u19
   723  009E0C  6F3A               	movwf	(?_sprintf+5)^(__Lparam& (0+65280))
   724  009E0E  EE01  F09D         	lfsr	0,_rtc+6
   725  009E12  CFEE F02D          	movff	postinc0,?a_rtc_test+4
   726  009E16  CFED F02E          	movff	postdec0,?a_rtc_test+5
   727  009E1A  EE01  F09F         	lfsr	0,_rtc+8
   728  009E1E  CFEE F02B          	movff	postinc0,?a_rtc_test+2
   729  009E22  CFED F02C          	movff	postdec0,?a_rtc_test+3
   730  009E26  EE01  F0A1         	lfsr	0,_rtc+10
   731  009E2A  CFEE F029          	movff	postinc0,?a_rtc_test
   732  009E2E  CFED F02A          	movff	postdec0,?a_rtc_test+1
   733  009E32  0E29               	movlw	low ?a_rtc_test
   734  009E34  CFE8 F035          	movff	wreg,?_sprintf
   735  009E38  0E00               	movlw	high ?a_rtc_test
   736  009E3A  CFE8 F036          	movff	wreg,?_sprintf+1
   737  009E3E  ECA6  F04A         	call	_sprintf	;wreg free
   738                           ;ds1302.c: 229: xprint(3,0,0,bufb);
   739  009E42  0E03               	movlw	3
   740  009E44  0100               	movlb	__Lparam shr (0+8)
   741  009E46  6F35               	movwf	?_xprint^(__Lparam& (0+65280))
   742  009E48  6B36               	clrf	(?_xprint+1)^(__Lparam& (0+65280))
   743  009E4A  6B37               	clrf	(?_xprint+2)^(__Lparam& (0+65280))
   744  009E4C  6B38               	clrf	(?_xprint+3)^(__Lparam& (0+65280))
   745  009E4E  6B39               	clrf	(?_xprint+4)^(__Lparam& (0+65280))
   746  009E50  0E94               	movlw	low _bufb
   747  009E52  6F3A               	movwf	(?_xprint+5)^(__Lparam& (0+65280))
   748  009E54  0E0E               	movlw	high _bufb
   749  009E56  6F3B               	movwf	(?_xprint+6)^(__Lparam& (0+65280))
   750  009E58  EC64  F049         	call	_xprint	;wreg free
   751                           ;ds1302.c: 231: memset(bufb,'\0',sizeof(bufb));
   752  009E5C  0100               	movlb	__Lparam shr (0+8)
   753  009E5E  0E94               	movlw	low _bufb
   754  009E60  6F35               	movwf	?_memset^(__Lparam& (0+65280))
   755  009E62  0E0E               	movlw	high _bufb
   756  009E64  6F36               	movwf	(?_memset+1)^(__Lparam& (0+65280))
   757  009E66  6B37               	clrf	(?_memset+2)^(__Lparam& (0+65280))
   758  009E68  6B38               	clrf	(?_memset+3)^(__Lparam& (0+65280))
   759  009E6A  0E64               	movlw	100
   760  009E6C  6F39               	movwf	(?_memset+4)^(__Lparam& (0+65280))
   761  009E6E  6B3A               	clrf	(?_memset+5)^(__Lparam& (0+65280))
   762  009E70  EC9A  F051         	call	_memset	;wreg free
   763                           ;ds1302.c: 232: sprintf( bufb,"  %02d:%02d:%02d"
      +                          ,rtc.hour,rtc.minute,rtc.second);
   764  009E74  0100               	movlb	__Lparam shr (0+8)
   765  009E76  0E94               	movlw	low _bufb
   766  009E78  6F37               	movwf	(?_sprintf+2)^(__Lparam& (0+65280))
   767  009E7A  0E0E               	movlw	high _bufb
   768  009E7C  6F38               	movwf	(?_sprintf+3)^(__Lparam& (0+65280))
   769  009E7E  0E00               	movlw	low u29
   770  009E80  6F39               	movwf	(?_sprintf+4)^(__Lparam& (0+65280))
   771  009E82  0E0F               	movlw	high u29
   772  009E84  6F3A               	movwf	(?_sprintf+5)^(__Lparam& (0+65280))
   773  009E86  C197  F02D         	movff	_rtc,?a_rtc_test+4
   774  009E8A  C198  F02E         	movff	_rtc+1,?a_rtc_test+5
   775  009E8E  EE01  F099         	lfsr	0,_rtc+2
   776  009E92  CFEE F02B          	movff	postinc0,?a_rtc_test+2
   777  009E96  CFED F02C          	movff	postdec0,?a_rtc_test+3
   778  009E9A  EE01  F09B         	lfsr	0,_rtc+4
   779  009E9E  CFEE F029          	movff	postinc0,?a_rtc_test
   780  009EA2  CFED F02A          	movff	postdec0,?a_rtc_test+1
   781  009EA6  0E29               	movlw	low ?a_rtc_test
   782  009EA8  CFE8 F035          	movff	wreg,?_sprintf
   783  009EAC  0E00               	movlw	high ?a_rtc_test
   784  009EAE  CFE8 F036          	movff	wreg,?_sprintf+1
   785  009EB2  ECA6  F04A         	call	_sprintf	;wreg free
   786                           ;ds1302.c: 233: xprint(5,0,0,bufb);
   787  009EB6  0E05               	movlw	5
   788  009EB8  0100               	movlb	__Lparam shr (0+8)
   789  009EBA  6F35               	movwf	?_xprint^(__Lparam& (0+65280))
   790  009EBC  6B36               	clrf	(?_xprint+1)^(__Lparam& (0+65280))
   791  009EBE  6B37               	clrf	(?_xprint+2)^(__Lparam& (0+65280))
   792  009EC0  6B38               	clrf	(?_xprint+3)^(__Lparam& (0+65280))
   793  009EC2  6B39               	clrf	(?_xprint+4)^(__Lparam& (0+65280))
   794  009EC4  0E94               	movlw	low _bufb
   795  009EC6  6F3A               	movwf	(?_xprint+5)^(__Lparam& (0+65280))
   796  009EC8  0E0E               	movlw	high _bufb
   797  009ECA  6F3B               	movwf	(?_xprint+6)^(__Lparam& (0+65280))
   798  009ECC  EF64  F049         	goto	_xprint	;wreg free
   799                           
   800                           	psect	const
   801  000F00                     u29:
   802  000F00  20                 	db	32
   803  000F01  20                 	db	32
   804  000F02  25                 	db	37
   805  000F03  30                 	db	48	;'0'
   806  000F04  32                 	db	50	;'2'
   807  000F05  64                 	db	100	;'d'
   808  000F06  3A                 	db	58	;':'
   809  000F07  25                 	db	37
   810  000F08  30                 	db	48	;'0'
   811  000F09  32                 	db	50	;'2'
   812  000F0A  64                 	db	100	;'d'
   813  000F0B  3A                 	db	58	;':'
   814  000F0C  25                 	db	37
   815  000F0D  30                 	db	48	;'0'
   816  000F0E  32                 	db	50	;'2'
   817  000F0F  64                 	db	100	;'d'
   818  000F10  00                 	db	0
   819  000F11                     u19:
   820  000F11  32                 	db	50	;'2'
   821  000F12  30                 	db	48	;'0'
   822  000F13  25                 	db	37
   823  000F14  30                 	db	48	;'0'
   824  000F15  32                 	db	50	;'2'
   825  000F16  64                 	db	100	;'d'
   826  000F17  2D                 	db	45
   827  000F18  25                 	db	37
   828  000F19  30                 	db	48	;'0'
   829  000F1A  32                 	db	50	;'2'
   830  000F1B  64                 	db	100	;'d'
   831  000F1C  2D                 	db	45
   832  000F1D  25                 	db	37
   833  000F1E  30                 	db	48	;'0'
   834  000F1F  32                 	db	50	;'2'
   835  000F20  64                 	db	100	;'d'
   836  000F21  00                 	db	0
   837  000000                     
   838  000000                     
   839  000000                     
   840  000000                     
   841  000000                     
   842  000000                     
   843  000000                     
   844  000000                     
   845  000000                     
   846  000000                     
   847  000000                     
   848  000000                     
   849  000000                     
   850  000000                     
   851  000000                     
   852  000000                     
   853  000000                     
   854  000000                     
   855  000000                     
   856  000000                     
   857  000000                     
   858  000000                     
   859  000000                     
   860  000000                     
   861  000000                     
   862  000000                     
   863  000000                     
   864  000000                     
   865  000000                     
   866  000000                     
   867  000000                     
   868  000000                     
   869  000000                     
   870  000000                     
   871  000000                     
   872  000000                     
   873  000000                     
   874  000000                     
   875  000000                     
   876  000000                     
   877  000000                     
   878  000000                     
   879  000000                     
   880  000000                     
   881  000000                     
   882  000000                     
   883  000000                     
   884  000000                     
   885  000000                     
   886  000000                     
   887  000000                     
   888  000000                     
   889  000000                     
   890  000000                     
   891  000000                     
   892  000000                     
   893  000000                     
   894  000000                     
   895  000000                     
   896  000000                     
   897  000000                     
   898  000000                     
   899  000000                     
   900  000000                     
   901  000000                     
   902  000000                     
   903  000000                     
   904  000000                     
   905  000000                     
   906  000000                     
   907  000000                     
   908  000000                     
   909  000000                     
   910  000000                     
   911  000000                     
   912  000000                     
   913  000000                     
   914  000000                     
   915  000000                     
   916  000000                     
   917  000000                     
   918  000000                     
   919  000000                     
   920  000000                     
   921  000000                     
   922  000000                     
   923  000000                     
   924  000000                     
   925  000000                     
   926  000000                     
   927  000000                     
   928  000000                     
   929  000000                     
   930  000000                     
   931  000000                     
   932  000000                     
   933  000000                     
   934  000000                     
   935  000000                     
   936  000000                     
   937  000000                     
   938  000000                     
   939  000000                     
   940  000000                     
   941  000000                     
   942  000000                     
   943  000000                     
   944  000000                     
   945  000000                     
   946  000000                     
   947  000000                     
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                     
  1058  000000                     
  1059  000000                     
  1060  000000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
  1072  000000                     
  1073  000000                     
  1074  000000                     
  1075  000000                     
  1076  000000                     
  1077  000000                     
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  1244  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  000000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000                     
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000                     
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000                     
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                     
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000000                     
  1339  000000                     
  1340  000000                     
  1341  000000                     
  1342  000000                     
  1343  000000                     
  1344  000000                     
  1345  000000                     
  1346  000000                     
  1347  000000                     
  1348  000000                     
  1349  000000                     
  1350  000000                     
  1351  000000                     
  1352  000000                     
  1353  000000                     
  1354  000000                     
  1355  000000                     
  1356  000000                     
  1357  000000                     
  1358  000000                     
  1359  000000                     
  1360  000000                     
  1361  000000                     
  1362  000000                     
  1363  000000                     
  1364  000000                     
  1365  000000                     
  1366  000000                     
  1367  000000                     
  1368  000000                     
  1369  000000                     
  1370  000000                     
  1371  000000                     
  1372  000000                     
  1373  000000                     
  1374  000000                     
  1375  000000                     
  1376  000000                     
  1377  000000                     
  1378  000000                     
  1379  000000                     
  1380  000000                     
  1381  000000                     
  1382  000000                     
  1383  000000                     
  1384  000000                     
  1385  000000                     
  1386  000000                     
  1387  000000                     
  1388  000000                     
  1389  000000                     
  1390  000000                     
  1391  000000                     
  1392  000000                     
  1393  000000                     
  1394  000000                     
  1395  000000                     
  1396  000000                     
  1397  000000                     
  1398  000000                     
  1399  000000                     
  1400  000000                     
  1401  000000                     
  1402  000000                     
  1403  000000                     
  1404  000000                     
  1405  000000                     
  1406  000000                     
  1407  000000                     
  1408  000000                     
  1409  000000                     
  1410  000000                     
  1411  000000                     
  1412  000000                     
  1413  000000                     
  1414  000000                     
  1415  000000                     
  1416  000000                     
  1417  000000                     
  1418  000000                     
  1419  000000                     
  1420  000000                     
  1421  000000                     
  1422  000000                     
  1423  000000                     
  1424  000000                     
  1425  000000                     
  1426  000000                     
  1427  000000                     
  1428  000000                     
  1429  000000                     
  1430  000000                     
  1431  000000                     
  1432  000000                     
  1433  000000                     
  1434  000000                     
  1435  000000                     
  1436  000000                     
  1437  000000                     
  1438  000000                     
  1439  000000                     
  1440  000000                     
  1441  000000                     
  1442  000000                     
  1443  000000                     
  1444  000000                     
  1445  000000                     
  1446  000000                     
  1447  000000                     
  1448  000000                     
  1449  000000                     
  1450  000000                     
  1451  000000                     
  1452  000000                     
  1453  000000                     
  1454  000000                     
  1455  000000                     
  1456  000000                     
  1457  000000                     
  1458  000000                     
  1459  000000                     
  1460  000000                     
  1461  000000                     
  1462  000000                     
  1463  000000                     
  1464  000000                     
  1465  000000                     
  1466  000000                     
  1467  000000                     
  1468  000000                     
  1469  000000                     
  1470  000000                     
  1471  000000                     
  1472  000000                     
  1473  000000                     
  1474  000000                     
  1475  000000                     
  1476  000000                     
  1477  000000                     
  1478  000000                     
  1479  000000                     
  1480  000000                     
  1481  000000                     
  1482  000000                     
  1483  000000                     
  1484  000000                     
  1485  000000                     
  1486  000000                     
  1487  000000                     
  1488  000000                     
  1489  000000                     
  1490  000000                     
  1491  000000                     
  1492  000000                     
  1493  000000                     
  1494  000000                     
  1495  000000                     
  1496  000000                     
  1497  000000                     
  1498  000000                     
  1499  000000                     
  1500  000000                     
  1501  000000                     
  1502  000000                     
  1503  000000                     
  1504  000000                     
  1505  000000                     
  1506  000000                     
  1507  000000                     
  1508  000000                     
  1509  000000                     
  1510  000000                     
  1511  000000                     
  1512  000000                     
  1513  000000                     
  1514  000000                     
  1515  000000                     
  1516  000000                     
  1517  000000                     
  1518  000000                     
  1519  000000                     
  1520  000000                     
  1521  000000                     
  1522  000000                     
  1523  000000                     
  1524  000000                     
  1525  000000                     
  1526  000000                     
  1527  000000                     
  1528  000000                     
  1529  000000                     
  1530  000000                     
  1531  000000                     
  1532  000000                     
  1533  000000                     
  1534  000000                     
  1535  000000                     
  1536  000000                     
  1537  000000                     
  1538  000000                     
  1539  000000                     
  1540  000000                     
  1541  000000                     
  1542  000000                     
  1543  000000                     
  1544  000000                     
  1545  000000                     
  1546  000000                     
  1547  000000                     
  1548  000000                     
  1549  000000                     
  1550  000000                     
  1551  000000                     
  1552  000000                     
  1553  000000                     
  1554  000000                     
  1555  000000                     
  1556  000000                     
  1557  000000                     
  1558  000000                     
  1559  000000                     
  1560  000000                     
  1561  000000                     
  1562                           
  1563                           	psect	bigbss
  1564  000E8A                     _time:
  1565  000E8A                     	ds	8
  1566                           
  1567                           	psect	bss
  1568  000197                     _rtc:
  1569  000197                     	ds	12
  1570                           
  1571                           	psect	temp
  1572  000000                     btemp:
  1573  000000                     	ds	4
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           prodh	equ	0xFF4
  1577                           prodl	equ	0xFF3
  1578                           indf0	equ	0xFEF
  1579                           postinc0	equ	0xFEE
  1580                           postdec0	equ	0xFED
  1581                           fsr0h	equ	0xFEA
  1582                           fsr0l	equ	0xFE9
  1583                           wreg	equ	0xFE8
  1584                           indf1	equ	0xFE7
  1585                           fsr1h	equ	0xFE2
  1586                           fsr1l	equ	0xFE1
  1587                           fsr2l	equ	0xFD9
  1588                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V8.35PL3
Symbol Table                                           Thu Jan  2 10:12:16 2014

                      l8 9AB0                       l21 9B08  
                     l15 9AD0                       l24 9B12  
                     l16 9AE4                       l25 9B14  
                     l34 9C0C                       l43 9CC8  
                     l27 9B36                       l44 9CCA  
                     l39 9C84                       u19 0F11  
                     u35 9ADC                       u29 0F00  
                    _rtc 0197                      wreg 000FE8  
               _delay_ms 9ACC                 _delay_us 9AB0  
                   f7433 002F                ?_delay_ms 002B  
              ?_delay_us 002C                     _bufb 0E94  
                   _time 0E8A                     fsr0h 000FEA  
                   indf0 000FEF                     fsr0l 000FE9  
                   indf1 000FE7                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0000  
                   prodh 000FF4                     prodl 000FF3  
               clear_big 0018                 clear_bss 0024  
               _rtc_test 9DE0                  ?_memset 0035  
                ?_xprint 0035               used_btemp0 0001  
             used_btemp1 0001               used_btemp2 0001  
             used_btemp3 0001               _bcd_to_asc 9DB8  
             _bcd_to_hex 9CE8               ?a_rtc_test 0029  
                  status 000FD8              ?_bcd_to_asc 0029  
                __Lparam 0029             _set_rtc_time 9C3C  
                __ramtop 0F00         _ds1302_read_data 9BB2  
       _ds1302_read_byte 9B2E        _ds1302_write_data 9B66  
      _ds1302_write_byte 9B04                  _sprintf 954C  
               ?_sprintf 0035          _ds1302_get_time 9C66  
          ?_set_rtc_time 002A       ?_ds1302_write_data 002B  
                postdec0 000FED                  postinc0 000FEE  
                 _memset A334          _ds1302_pin_init 9AFC  
           _ds1302_check 9CA2          _ds1302_set_time 9BF4  
                 _xprint 92C8         ?_ds1302_set_time 0029  
                 tblptrl 000FF6              _ds1302_init 9CCE  
